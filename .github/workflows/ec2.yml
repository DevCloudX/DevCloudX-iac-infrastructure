name: Terraform EC2 Deployment

on:
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: "AWS Access Key ID"
        required: true
        type: string
      aws_secret_access_key:
        description: "AWS Secret Access Key"
        required: true
        type: string
      aws_region:
        description: "AWS Region"
        required: true
        default: "us-east-1"
        type: string
      ami_id:
        description: "AMI ID"
        required: true
        default: "ami-0c02fb55956c7d316"
        type: string
      instance_type:
        description: "EC2 Instance Type"
        required: true
        default: "t2.micro"
        type: string
      instance_name:
        description: "Name Tag for EC2"
        required: true
        type: string
      terraform_action:
        description: "Terraform action to perform (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest

    outputs:
      terraform_action: ${{ inputs.terraform_action }}

    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
      TF_VAR_aws_region: ${{ inputs.aws_region }}
      TF_VAR_ami_id: ${{ inputs.ami_id }}
      TF_VAR_instance_type: ${{ inputs.instance_type }}
      TF_VAR_instance_name: ${{ inputs.instance_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: ${{ github.event.inputs.terraform_action == 'apply' }}
    environment: apply-review

    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
      TF_VAR_aws_region: ${{ inputs.aws_region }}
      TF_VAR_ami_id: ${{ inputs.ami_id }}
      TF_VAR_instance_type: ${{ inputs.instance_type }}
      TF_VAR_instance_name: ${{ inputs.instance_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: apply
    if: ${{ github.event.inputs.terraform_action == 'destroy' }}
    environment: destroy-review

    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
      TF_VAR_aws_region: ${{ inputs.aws_region }}
      TF_VAR_ami_id: ${{ inputs.ami_id }}
      TF_VAR_instance_type: ${{ inputs.instance_type }}
      TF_VAR_instance_name: ${{ inputs.instance_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
