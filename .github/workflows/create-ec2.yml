name: create AWS EC2 

on:
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: "AWS Access Key ID"
        required: true
        type: string
      aws_secret_access_key:
        description: "AWS Secret Access Key"
        required: true
        type: string
      aws_region:
        description: "AWS Region"
        required: true
        default: "us-east-1"
        type: string
      ami_id:
        description: "AMI ID"
        required: true
        default: "ami-0c02fb55956c7d316"
        type: string
      instance_type:
        description: "EC2 Instance Type"
        required: true
        default: "t2.micro"
        type: string
      instance_name:
        description: "Name Tag for EC2"
        required: true
        type: string

env:
  TF_VAR_aws_region: ${{ inputs.aws_region }}
  TF_VAR_ami_id: ${{ inputs.ami_id }}
  TF_VAR_instance_type: ${{ inputs.instance_type }}
  TF_VAR_instance_name: ${{ inputs.instance_name }}
  AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ec2

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: ec2

  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    environment:
      name: apply-review
      
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ec2

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ec2

      - name: Save Terraform State
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: ec2/terraform.tfstate

  destroy:
    name: Terraform Destroy
    needs: apply
    runs-on: ubuntu-latest
    environment:
      name: destroy-review
      
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Download Terraform State
        uses: actions/download-artifact@v4
        with:
          name: terraform-state

      - name: Terraform Init
        run: terraform init
        working-directory: ec2

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
        working-directory: ec2
